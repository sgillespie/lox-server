name: Nix Build

on:
  - push
  - pull_request
  - release

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest

    runs-on: ${{ matrix.os }}

    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ matrix.os }}-${{ github.sha }}

    steps:
    - uses: actions/checkout@v3

    - uses: cachix/install-nix-action@v22
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
        extra_nix_config: |
          experimental-features = nix-command flakes
          allow-import-from-derivation = true
          accept-flake-config = true

    - uses: cachix/cachix-action@v12
      with:
        name: sgillespie
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Build executables (Linux)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        # Static build x86_64
        nix build -L .\#dist.x86_64-linux -o linux-x86_64
        # Static cross build aarch64
        nix build -L .\#dist.aarch64-linux -o linux-aarch64
        # Windows cross build
        nix build -L .\#dist.x86_64-windows -o windows-x86_64

    - name: Build executables (macOS)
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        # Native build aarch64
        nix build -L .\#dist.aarch64-macos -o macos-aarch64

    - name: Run tests (Linux)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        nix build -L .\#checks.x86_64-linux.lox-server:test:lox-server-test

    - name: Run tests (macOS)
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        nix build -L .\#checks.aarch64-darwin.lox-server:test:lox-server-test


    - name: Upload release artifacts
      uses: softprops/action-gh-release@v2
      if: ${{ github.event_name == 'release' }}
      with:
        files: |
          linux-x86_64/*.tar.gz
          linux-aarch64/*.tar.gz
          windows-x86_64/*.zip
          macos-aarch64/*.tar.gz
